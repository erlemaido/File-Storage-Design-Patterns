// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApp.Data;

namespace WebApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("WebApp.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("serial")
                        .HasColumnName("product_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(19,4)")
                        .HasColumnName("price");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("product_code");

                    b.Property<short>("ProductStateTypeCode")
                        .HasColumnType("smallint")
                        .HasColumnName("product_state_type_code");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("title");

                    b.HasKey("ProductId");

                    b.HasIndex("ProductStateTypeCode");

                    b.ToTable("product", "cloud");
                });

            modelBuilder.Entity("WebApp.Models.ProductPicture", b =>
                {
                    b.Property<long>("ProductPictureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigserial")
                        .HasColumnName("product_picture_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("PictureUrl")
                        .HasColumnType("varchar")
                        .HasColumnName("picture_url");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.Property<short>("SeqNr")
                        .HasColumnType("smallint")
                        .HasColumnName("seq_nr");

                    b.HasKey("ProductPictureId");

                    b.HasIndex("ProductId", "SeqNr")
                        .IsUnique();

                    b.ToTable("product_picture", "cloud");
                });

            modelBuilder.Entity("WebApp.Models.ProductStateType", b =>
                {
                    b.Property<short>("ProductStateTypeCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("product_state_type_code")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("title");

                    b.HasKey("ProductStateTypeCode");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("product_state_type", "cloud");

                    b.HasData(
                        new
                        {
                            ProductStateTypeCode = (short)1,
                            Title = "Ootel"
                        },
                        new
                        {
                            ProductStateTypeCode = (short)2,
                            Title = "Aktiivne"
                        },
                        new
                        {
                            ProductStateTypeCode = (short)3,
                            Title = "Mitteaktiivne"
                        },
                        new
                        {
                            ProductStateTypeCode = (short)4,
                            Title = "Lõpetatud"
                        });
                });

            modelBuilder.Entity("WebApp.Models.Product", b =>
                {
                    b.HasOne("WebApp.Models.ProductStateType", "ProductStateType")
                        .WithMany()
                        .HasForeignKey("ProductStateTypeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductStateType");
                });

            modelBuilder.Entity("WebApp.Models.ProductPicture", b =>
                {
                    b.HasOne("WebApp.Models.Product", "Product")
                        .WithMany("ProductPictures")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WebApp.Models.Product", b =>
                {
                    b.Navigation("ProductPictures");
                });
#pragma warning restore 612, 618
        }
    }
}
